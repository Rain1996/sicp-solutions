(define (make_account balance password)
    (define incorrect_times 0)
    (define (call_the_cops) "bi bi bi bi")
    (define (withdraw amount)
        (if (>= balance amount)
            (begin (set! balance (- balance amount))
                   balance)
            "Insufficient funds"))

    (define (deposit amount)
        (set! balance (+ balance amount))
        balance)

    (define (dispatch p m)
        (if (eq? p password)
            (begin (set! incorrect_times 0)
                   (cond ((eq? m 'withdraw) withdraw)
                         ((eq? m 'deposit) deposit)
                         (else (error "Unknown request -- MAKE_ACCOUNT" m))))
            (lambda (amount)
                (set! incorrect_times (+ incorrect_times 1))
                (if (>= incorrect_times 7)
                    (call_the_cops)
                    "Incorrect password"))))

    dispatch)

; test
(define acc (make_account 100 'secret-password))
(newline)
(display ((acc 'secret-password 'withdraw) 40))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'secret-password 'withdraw) 40))
(newline)
(display ((acc 'some-other-password 'deposit) 50))

